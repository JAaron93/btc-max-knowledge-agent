name: 'Setup Python with Dependencies'
description: 'Set up Python environment and install project dependencies'
inputs:
  python-version:
    description: 'Python version to use'
    required: true
    default: '3.11'
  extras:
    description: 'Extra dependencies to install (e.g., "dev")'
    required: false
    default: 'dev'

runs:
  using: 'composite'
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: "pip"
        # Cache based on the specific dependency files used by this project
        # This provides faster cache key computation while remaining comprehensive
        cache-dependency-path: |
          requirements.txt
          pyproject.toml
          **/requirements*.txt
          **/pyproject.toml
          **/poetry.lock
          **/Pipfile.lock
          **/uv.lock
          **/pdm.lock
          **/pixi.lock
    
    - name: Install dependencies
      shell: bash
      run: |
        set -euo pipefail
        python -m pip install --upgrade pip
        # Install the project in development mode - eliminates path hacks
        # Trim leading/trailing whitespace but keep internal separators.
        extras="$(echo "${{ inputs.extras }}" | xargs)"
        # Replace remaining spaces with commas so both “dev test” and “dev, test” work.
        extras="${extras// /,}"
        if [ -n "$extras" ]; then
          pip install -e ".[${extras}]"
        else
          pip install -e .
        fi